package ${model.pkgName};

import java.lang.annotation.Annotation;

import com.thwt.core.annotation.Generated;
import com.thwt.core.annotation.jmx.ServiceMBean;
import com.thwt.core.annotation.service.Module;
import com.thwt.core.service.ServiceModule;
import com.thwt.core.service.ServiceVerticle;
import com.thwt.core.service.ModuleStatus;
import com.thwt.core.vertx.VertxKernelContext;
#foreach($stmt in $model.imports)
import $stmt;
#end

/**
 * auto generated by service code generator, any modification to this file would be overridden !
 *
 */
@Generated
@Module
public class ${model.name} extends ServiceModule<${model.targetObjectClass}> {

  private Class<?>[] deps = new Class<?>[] {
  #if($model.dependencies)
    ${helper.joinClasses($model.dependencies)}
  #end
  };
  
  private Class<?>[] optionals = new Class<?>[] {
  #if($model.optionalDependencies)
    ${helper.joinClasses($model.optionalDependencies)}
  #end
  };
  
  private Class<?>[] services = new Class<?>[]{
  #if($model.serviceClasses)
    ${helper.joinClasses($model.serviceClasses)}
  #end
  };
  
  private ServiceMBean ann = new ServiceMBean() {
    
    @Override
    public Class<? extends Annotation> annotationType() {
      return ServiceMBean.class;
    }
    
    @Override
    public String value() {
      return "${model.ann.value()}";
    }
    
    @Override
    public Class<?>[] remoteServices() {
      return EMPTY_CLASS_ARRAY;
    }
    
    @Override
    public String objectName() {
      return "";
    }
    
    @Override
    public String moduleName() {
      return "${model.ann.moduleName()}";
    }
    
    @Override
    public Class<?>[] localServices() {
      return services;
    }
    
    @Override
    public int priority() {
      return ${model.ann.priority()};
    }
    
    
    @Override
    public String lbPolicy() {
      return "";
    }
    
    @Override
    public Class<?>[] kernelServices() {
      return EMPTY_CLASS_ARRAY;
    }
    
    @Override
    public String kernelName() {
      return "";
    }
    
    @Override
    public String description() {
      return "${model.ann.description()}";
    }
  };

  @Override
  public Class<?>[] dependencies() {
    return this.deps;
  }
  
  @Override
  public Class<?>[] optionalDependencies() {
    return this.optionals;
  }

  @Override
  public String getModuleId() {
    return "${model.moduleId}";
  }

  @Override
  protected ServiceMBean getServiceAnnotation() {
    return this.ann;
  }

  @Override
  protected ServiceVerticle<${model.targetObjectClass}> createServiceVerticle(VertxKernelContext ctx, ModuleStatus mstatus) {
    return new ${model.verticleClass}(this.ann, ctx, mstatus);
  }

}
